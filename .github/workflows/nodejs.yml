name: Katalon Agent

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - 10.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache
      uses: actions/cache@v1.0.3
      with:
        path: node_modules
        key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install packages and build with Node.js ${{ matrix.node-version }}
      env:
        CI: true
      run: |
        npm install
        npm run build --if-present
        echo "::set-env name=BUILD_VERSION::$(node -p "require('./package').version")"
        
    - name: Package artifacts
      run: |
        mkdir -p packages
        zip -9 packages/katalon-agent-win-x64.zip bin/cli-win-x64.exe bin/nssm.exe bin/service.bat bin/start.bat
        zip -9 packages/katalon-agent-win-x86.zip bin/cli-win-x86.exe bin/nssm.exe bin/service.bat bin/start.bat
        zip -9 packages/katalon-agent-linux-x64.zip bin/cli-linux-x64 bin/service.sh bin/start.sh
        zip -9 packages/katalon-agent-linux-x86.zip bin/cli-linux-x86 bin/service.sh bin/start.sh
        zip -9 packages/katalon-agent-macos-x64.zip bin/cli-macos-x64 bin/service.sh bin/start.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: katalon-agent-${{ env.BUILD_VERSION }}
        path: bin

    - name: Draft new release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run release
